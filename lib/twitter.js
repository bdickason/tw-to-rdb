// Generated by CoffeeScript 1.4.0

/* Handle integration with Twitter API
*/


(function() {
  var OAuth, Twitter;

  OAuth = (require('oauth')).OAuth;

  exports.Twitter = Twitter = (function() {

    function Twitter(cfg, db) {
      var oa;
      this.cfg = cfg;
      this.db = db;
      this.oa = oa = new OAuth('https://api.twitter.com/oauth/request_token', 'https://api.twitter.com/oauth/access_token', this.cfg.TW_CONSUMER_KEY, this.cfg.TW_CONSUMER_SECRET, '1.0', "http://" + this.cfg.HOSTNAME + ":" + this.cfg.PORT + "/tw/callback", 'HMAC-SHA1');
    }

    Twitter.prototype.getFavorites = function(user_name, count, callback) {
      var _this = this;
      return this.db.getAccessTokens(user_name, "Twitter", function(error, reply) {
        console.log(reply);
        if (error) {
          return console.log(error);
        } else {
          return _this.oa.getProtectedResource('https://api.twitter.com/1.1/favorites/list.json?count=#{count}', 'GET', reply.access_token, reply.access_token_secret, function(error, data, response) {
            if (error) {
              console.log(error);
              return callback('Error: getting OAuth resource: ' + error);
            } else {
              return callback(JSON.parse(data));
            }
          });
        }
      });
    };

    Twitter.prototype.login = function(callback) {
      var _this = this;
      console.log('Getting OAuth Request Token');
      return this.oa.getOAuthRequestToken(function(error, oauth_token, oauth_token_secret, results) {
        if (error) {
          console.log('error :' + JSON.stringify(error));
        }
        return callback({
          oauth_token: oauth_token,
          oauth_token_secret: oauth_token_secret
        });
      });
    };

    Twitter.prototype.handleCallback = function(oauth_token, oauth_token_secret, oauth_verifier, callback) {
      var _this = this;
      return this.oa.getOAuthAccessToken(oauth_token, oauth_token_secret, oauth_verifier, function(error, oauth_access_token, oauth_access_token_secret, response) {
        var user_name;
        if (error) {
          console.log('error :' + JSON.stringify(error));
        } else if (!response) {
          console.log('error: ' + response);
        }
        user_name = response.screen_name;
        return _this.db.doesAccountExist(user_name, "Twitter", function(error, reply) {
          if (reply !== 1) {
            console.log("adding new Twitter account for user: " + user_name);
            _this.db.createAccount(user_name, "Twitter", function(error) {
              if (error) {
                return console.log("Error: " + error);
              }
            });
          }
          return _this.db.setAccessTokens(user_name, "Twitter", oauth_access_token, oauth_access_token_secret, function(error, reply) {
            if (error) {
              console.log("Error: " + error);
            }
            return callback(error, {
              oauth_access_token: oauth_access_token,
              oauth_access_token_secret: oauth_access_token_secret,
              "user_name": user_name
            });
          });
        });
      });
    };

    return Twitter;

  })();

}).call(this);
